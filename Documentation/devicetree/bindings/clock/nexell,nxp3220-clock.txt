Nexell NXP3220 CMU (Clock Management Units)

The nxp3220 clock controller generates clocks to various peripherals of nxp3220
SoC. It is consist of multiple PLLs and CMUs.

* List of PLLs
- PLL0
- PLL1
- PLL_CPU
- PLL_DDR0
- PLL_DDR1

* List of CMUs
- CMU_SRC: main clock sources across CMU_SYS/CPU/DDR/USB/MM
- CMU_SYS: system clocks
- CMU_CPU: cpu clocks
- CMU_DDR: ddr memory clocks
- CMU_USB: usb clocks
- CMU_MM: multimedia clocks

Required Properties:
- compatible: should be one of the following.
 - "nexell,nxp3220-cmu"		: CMU_SRC + CMU_SYS
 - "nexell,nxp3220-cmu-cpu"	: CMU_CPU
 - "nexell,nxp3220-cmu-ddr"	: CMU_DDR
 - "nexell,nxp3220-cmu-usb"	: CMU_USB
 - "nexell,nxp3220-cmu-mm"	: CMU_MM

- reg:		Specifies base physical address and size of the registers
 (Note: nexell,nxp3220-cmu should specify two memory regions which are for
  CMU_SRC and CMU_SYS)
- #clock-cells: should be 1.
- #reset-cells: should be 1.
- clocks:	phandles to the parent clocks used as input to the module.
- clock-names:	clock names of the parent clocks which described in
		clock-bindings.txt.

	Input clocks for the nxp3220-cmu
		- "oscclk"
		- "pll0"
		- "pll1"
		- "div_cpu_pll"
		- "div_pll_ddr0"
		- "div_pll_ddr1"

	Input clocks for the nxp3220-cmu-cpu
		- "pll_cpu"

	Input clocks for the nxp3220-cmu-ddr
		- "pll_ddr0"
		- "pll_ddr1"

	Input clocks for the nxp3220-cmu-usb
		- "src_usb0_ahb"

	Input clocks for the nxp3220-cmu-mm
		- "src_mm0_axi"
		- "src_vip0_padout0"
		- "src_vip0_padout1"
		- "src_dpc0_x2"
		- "src_lvds0_vclk"
		- "src_coda960_0_core"

Each clock can be assigned its identifier and a clock consumer client can use
the identifier with cmu's phandle. All available clock identifiers are defined
in include/dt-bindings/clock/nxp3220-clk.h>

Similarly reset IDs of each clocks can be found in
include/dt-bindings/reset/nexell,nxp3220-reset.h

Example 1: Examples of 'oscclk' source clock node
	oscclk: xti {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-output-names = "oscclk";
		clock-frequency =  <24000000>;
	};

Example 2: Examples of pll clocks
	pll_0: pll0 {
		compatible = "nexell,pll2555", "syscon";
		reg = <0x27020000 0x60>;

		#clock-cells = <1>;
		clocks = <&oscclk>;
		clock-output-names = "pll0";
	};

	pll_1: pll1 {
		compatible = "nexell,pll2651", "syscon";
		reg = <0x27030000 0x60>;

		#clock-cells = <1>;
		clocks = <&oscclk>;
		clock-output-names = "pll1";
	};

	pll_cpu: pll-cpu {
		compatible = "nexell,pll2555", "syscon";
		reg = <0x22070000 0x60>;

		#clock-cells = <1>;
		clocks = <&oscclk>;
		clock-output-names = "pll_cpu";
	};

	pll_ddr0: pll-ddr0 {
		compatible = "nexell,pll2555", "syscon";
		reg = <0x23070000 0x60>;

		#clock-cells = <1>;
		clocks = <&oscclk>;
		clock-output-names = "pll_ddr0";
	};

	pll_ddr1: pll-ddr1 {
		compatible = "nexell,pll2651", "syscon";
		reg = <0x23070000 0x60>;

		#clock-cells = <1>;
		clocks = <&oscclk>;
		clock-output-names = "pll_ddr1";
	};

Example 3: Examples of clock controllers
	cmu: clock-controller@27000000 {
		compatible = "nexell,nxp3220-cmu";
		reg = <0x27000000 0x8000>,
		    <0x27010000 0x8000>;
		#clock-cells = <1>;

		clock-names = "oscclk",
			"pll0",
			"pll1",
			"div_cpu_pll",
			"div_pll_ddr0",
			"div_pll_ddr1";
		clocks = <&oscclk>,
		       <&pll_0>,
		       <&pll_1>,
		       <&cmu_cpu CLK_CPU_DIV_PLL>,
		       <&cmu_ddr CLK_DDR_DIV_PLL_DDR0>,
		       <&cmu_ddr CLK_DDR_DIV_PLL_DDR1>;
	};

	cmu_cpu: clock-controller@22000000 {
		compatible = "nexell,nxp3220-cmu-cpu";
		reg = <0x22000000 0x800>;
		#clock-cells = <1>;

		clock-names = "pll_cpu";
		clocks = <&pll_cpu>;
	};

	cmu_ddr: clock-controller@23000000 {
		compatible = "nexell,nxp3220-cmu-ddr";
		reg = <0x23000000 0x1000>;
		#clock-cells = <1>;

		clock-names = "pll_ddr0",
			"pll_ddr1";
		clocks = <&pll_ddr0>,
		       <&pll_ddr1>;
	};

	cmu_usb: clock-controller@24000000 {
		compatible = "nexell,nxp3220-cmu-usb";
		reg = <0x24000000 0x400>;
		#clock-cells = <1>;

		clock-names = "src_usb0_ahb";
		clocks = <&cmu CLK_SRC_USB0_AHB>;
	};

	cmu_mm: clock-controller@25000000 {
		compatible = "nexell,nxp3220-cmu-mm";
		reg = <0x25000000 0x1000>;
		#clock-cells = <1>;

		clk-names = "src_mm0_axi",
			"src_vip0_padout0",
			"src_vip0_padout1",
			"src_dpc0_x2",
			"src_lvds0_vclk",
			"src_coda960_0_core";
		clocks = <&cmu CLK_SRC_MM0_AXI>,
		       <&cmu CLK_SRC_VIP0_PADOUT0>,
		       <&cmu CLK_SRC_VIP0_PADOUT1>,
		       <&cmu CLK_SRC_DPC0_X2>,
		       <&cmu CLK_SRC_LVDS0_VCLK>,
		       <&cmu CLK_SRC_CODA960_0_CORE>;
	};

Example 3: UART controller node that consumes the clock generated by the clock
	   controller.

	uart0: serial@20400000 {
		compatible = "snps,dw-apb-uart";
		reg = <0x20400000 0x1000>;
		reg-shift = <2>;
		reg-io-width = <4>;
		clocks = <&cmu CLK_UART0_CORE>,
		       <&cmu CLK_UART0_APB>;
		clock-names = "baudclk", "apb_pclk";
		status = "disabled";
	};
